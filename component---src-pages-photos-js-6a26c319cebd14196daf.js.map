{"version":3,"sources":["webpack:///./src/components/AlbumCover.js","webpack:///./src/pages/photos.js","webpack:///./src/components/Picture.js","webpack:///./src/components/InfoIcon.js"],"names":["AlbumCover","props","meta","className","URL","to","thumb","Picture","src","type","Loading","title","Object","keys","map","el","i","InfoIcon","name","key","divClassName","PhotosPage","data","markdownRemark","frontmatter","albumCovers","Layout","photo","childImageSharp","fluid","alt","children"],"mappings":"2QAMe,SAASA,EAAWC,GAC/B,IAAMC,EAAOD,EAAMC,KACnB,OACA,yBAAKC,UAAU,+BACTF,EAAMG,IACR,kBAAC,OAAD,CAAMC,GAAIJ,EAAMG,IAAKD,UAAU,uBAC7BF,EAAMK,MACR,kBAACC,EAAA,EAAD,CAASC,IAAKP,EAAMK,MAAOG,KAAK,wBADhB,kBAACC,EAAA,EAAD,OAFF,kBAACA,EAAA,EAAD,MAMZT,EAAMG,IACR,4BAAI,kBAAC,OAAD,CAAMC,GAAIJ,EAAMG,KAAMH,EAAMU,MAAQV,EAAMU,MAAQ,kBAACD,EAAA,EAAD,QADxC,kBAACA,EAAA,EAAD,MAGZR,EAAoBU,OAAOC,KAAKX,GAAMY,KAAI,SAACC,EAAIC,GAAL,OAAS,kBAACC,EAAA,EAAD,CAAUC,KAAMH,EAAII,IAAKH,EAAGI,aAAa,aAAalB,EAAKa,OAAvG,kBAACL,EAAA,EAAD,O,gBCZF,SAASW,IAEpB,IAAIC,EAAI,OA2BR,OADAA,EAAOA,EAAKC,eAAeC,YAAYC,YAGvC,kBAACC,EAAA,EAAD,KACEJ,EACEA,EAAKR,KAAI,SAACC,EAAIC,GAAL,OAAS,kBAAChB,EAAD,CAAYmB,IAAKH,EAAGL,MAAOI,EAAGJ,MAAOL,MAAOS,EAAGY,MAAMC,gBAAgBC,MAAO3B,KAAMa,EAAGb,KAAME,IAAG,WAAaW,EAAGX,SAD3H,kBAACM,EAAA,EAAD,S,kCCvCb,gFAEe,SAASH,EAAQN,GAC5B,OACI,kBAAC,IAAD,CAAO4B,MAAO5B,EAAMO,IAAKsB,IAAK7B,EAAM6B,IAAK3B,UAAWF,EAAMQ,S,4/JCDnD,SAASQ,EAAShB,GAC7B,OACI,yBAAKE,UAAWF,EAAMmB,cACtB,kBAAC,IAAD,CAAMF,KAAMjB,EAAMiB,KAAMY,IAAK7B,EAAMiB,KAAMT,KAAK,YAC9C,0BAAMN,UAAU,YAAYF,EAAM8B","file":"component---src-pages-photos-js-6a26c319cebd14196daf.js","sourcesContent":["import React from 'react';\r\nimport Picture from './Picture';\r\nimport InfoIcon from './InfoIcon';\r\nimport Loading from './Loading';\r\nimport { Link } from 'gatsby';\r\n\r\nexport default function AlbumCover(props){\r\n    const meta = props.meta\r\n    return(\r\n    <div className=\"content-element album-cover\">\r\n        {!props.URL ? <Loading /> :\r\n        <Link to={props.URL} className=\"album-cover-picture\">\r\n        {!props.thumb ? <Loading /> :\r\n        <Picture src={props.thumb} type=\"album-cover-picture\"></Picture>}\r\n        </Link>}\r\n        \r\n        {!props.URL ? <Loading /> :\r\n        <h4><Link to={props.URL}>{props.title ? props.title : <Loading />}</Link></h4>\r\n        }\r\n        {!meta ? <Loading/> : Object.keys(meta).map((el, i)=><InfoIcon name={el} key={i} divClassName=\"info-icon\">{meta[el]}</InfoIcon>)}\r\n\r\n        \r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport AlbumCover from '../components/AlbumCover';\r\nimport Loading from '../components/Loading';\r\nimport Layout from '../components/Layout';\r\n\r\n\r\nexport default function PhotosPage(){\r\n\r\n    var data = useStaticQuery(graphql`\r\n    query AlbumCoversQuery {\r\n      markdownRemark(fileAbsolutePath: {regex: \"/albumCovers/\"}) {\r\n        frontmatter {\r\n          albumCovers {\r\n            title\r\n            URL\r\n            meta {\r\n              person\r\n              time\r\n              location\r\n            }\r\n            photo {\r\n              childImageSharp {\r\n                fluid {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n      \r\n    `);\r\n\r\n    data = data.markdownRemark.frontmatter.albumCovers\r\n    return(\r\n      \r\n    <Layout>\r\n    {!data ? <Loading /> :\r\n        data.map((el, i)=><AlbumCover key={i} title={el.title} thumb={el.photo.childImageSharp.fluid} meta={el.meta} URL={`/photos/${el.URL}`} />)\r\n    }\r\n    </Layout>\r\n    );\r\n}","import React from 'react';\r\nimport Image from \"gatsby-image\";\r\nexport default function Picture(props){\r\n    return(\r\n        <Image fluid={props.src} alt={props.alt} className={props.type}/>\r\n    );\r\n}","import React from 'react';\r\nimport Icon from './Icon';\r\n\r\nexport default function InfoIcon(props){\r\n    return(\r\n        <div className={props.divClassName}>\r\n        <Icon name={props.name} alt={props.name} type=\"icon-sm\"/>\r\n        <span className=\"thin alt\">{props.children}</span>\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}