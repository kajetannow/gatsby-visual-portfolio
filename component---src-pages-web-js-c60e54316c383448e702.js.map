{"version":3,"sources":["webpack:///./src/components/ContentSection.js","webpack:///./src/components/DescriptionBlock.js","webpack:///./src/components/ButtonLink.js","webpack:///./src/pages/web.js","webpack:///./src/components/InfoIcon.js","webpack:///./src/components/Meta.js"],"names":["ContentSection","props","className","title","meta","description","children","DescriptionBlock","ButtonLink","href","WebPage","data","allMarkdownRemark","edges","Layout","map","site","i","frontmatter","node","sites","github","demo","key","dangerouslySetInnerHTML","__html","html","photos","el","fluid","childImageSharp","style","maxWidth","aspectRatio","alt","Loading","InfoIcon","divClassName","Icon","name","type","Meta","Object","keys"],"mappings":"k9RAAA,uEAGe,SAASA,EAAeC,GACnC,OACA,6BAASC,UAAU,mBACf,kBAAC,IAAD,CAAkBC,MAAOF,EAAME,MAAOC,KAAMH,EAAMG,MAC7CH,EAAMI,aAEVJ,EAAMK,Y,kCCTf,mFAIe,SAASC,EAAiBN,GAErC,IAAMG,EAAOH,EAAMG,KACnB,OACA,6BAASF,UAAU,qCACf,4BAAKD,EAAME,MAAQF,EAAME,MAAQ,kBAAC,IAAD,OACjC,kBAAC,IAAD,CAAMC,KAAMA,IACXH,EAAMK,Y,0JCTA,SAASE,EAAWP,GAC/B,OACA,uBAAGQ,KAAMR,EAAMQ,KAAMP,UAAU,YAAYD,EAAMK,U,yBCItC,SAASI,IAEpB,IAAIC,EAAI,OAgCR,OADAA,EAAOA,EAAKC,kBAAkBC,MAG9B,kBAACC,EAAA,EAAD,CAAQX,MAAM,UACRQ,EAAqBA,EAAKI,KAAI,SAACC,EAAKC,GAAK,IAClCC,EAAeF,EAAKG,KAApBD,YADiC,EAEJA,EAAYE,MAAzCjB,EAFiC,EAEjCA,MAAOC,EAF0B,EAE1BA,KAAMiB,EAFoB,EAEpBA,OAAQC,EAFY,EAEZA,KACtB,OAAO,kBAACtB,EAAA,EAAD,CAAgBuB,IAAKN,EAC5Bd,MAAOA,EACPC,KAAMA,EACNC,YACE,oCACF,yBAAKmB,wBAAyB,CAAEC,OAAQT,EAAKG,KAAKO,MAAQxB,UAAU,wBACpE,kBAACM,EAAD,CAAYC,KAAMY,GAAlB,mBACCC,EAAO,kBAACd,EAAD,CAAYC,KAAMa,GAAlB,mBAAuD,KAI7D,yBAAKpB,UAAU,wBACfgB,EAAYS,OAAuBT,EAAYS,OAAOZ,KAAI,SAACa,EAAGX,GAAJ,OAChE,kBAAC,IAAD,CAAOM,IAAKN,EAAGY,MAAOD,EAAGE,gBAAgBD,MAAOE,MAAO,CACrDC,SAAiD,GAAvCJ,EAAGE,gBAAgBD,MAAMI,YAAkB,MACpDC,IAAKhB,EAAYgB,IAAMhB,EAAYgB,IAAMhB,EAAYf,MAAOD,UAAU,kCAH9C,kBAACiC,EAAA,EAAD,WAftB,kBAACA,EAAA,EAAD,S,6JC1CF,SAASC,EAASnC,GAC7B,OACI,yBAAKC,UAAWD,EAAMoC,cACtB,kBAACC,EAAA,EAAD,CAAMC,KAAMtC,EAAMsC,KAAML,IAAKjC,EAAMsC,KAAMC,KAAK,YAC9C,0BAAMtC,UAAU,YAAYD,EAAMK,WCH3B,SAASmC,EAAKxC,GAEzB,IAAMG,EAAOH,EAAMG,KACnB,OACA,oCACEA,EAAYsC,OAAOC,KAAKvC,GAAMW,KAAI,SAACa,EAAIX,GAAL,OAAUb,EAAKwB,GAAM,kBAACQ,EAAD,CAAUG,KAAMX,EAAIL,IAAKN,EAAGoB,aAAa,aAAajC,EAAKwB,IAAkB,MAA7H","file":"component---src-pages-web-js-c60e54316c383448e702.js","sourcesContent":["import React from 'react';\r\nimport DescriptionBlock from './DescriptionBlock';\r\n\r\nexport default function ContentSection(props){\r\n    return(\r\n    <section className=\"content-section\">\r\n        <DescriptionBlock title={props.title} meta={props.meta}>\r\n            {props.description}\r\n        </DescriptionBlock>\r\n        {props.children}\r\n    </section>\r\n    );\r\n}","import React from 'react';\r\nimport Loading from './Loading';\r\nimport Meta from './Meta';\r\n\r\nexport default function DescriptionBlock(props){\r\n    \r\n    const meta = props.meta;\r\n    return(\r\n    <article className=\"content-element description-block\">\r\n        <h3>{props.title ? props.title : <Loading />}</h3>\r\n        <Meta meta={meta} />\r\n        {props.children}\r\n    </article>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function ButtonLink(props){\r\n    return(\r\n    <a href={props.href} className=\"btn-link\">{props.children}</a>\r\n    );\r\n}","import React from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Loading from '../components/Loading';\r\nimport ContentSection from '../components/ContentSection';\r\nimport Layout from '../components/Layout';\r\nimport ButtonLink from '../components/ButtonLink';\r\nimport Image from \"gatsby-image\";\r\n\r\nexport default function WebPage(){\r\n  \r\n    let data = useStaticQuery(graphql`\r\n    query AllSitesQuery {\r\n      allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/sites/\"}}) {\r\n        edges {\r\n          node {\r\n            html\r\n            frontmatter {\r\n              sites {\r\n                title\r\n                github\r\n                demo\r\n                meta {\r\n                  langs\r\n                }\r\n              }\r\n              photos {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 2000) {\r\n                    ...GatsbyImageSharpFluid\r\n                    aspectRatio\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    `);\r\n    data = data.allMarkdownRemark.edges\r\n    return(\r\n        \r\n    <Layout title=\"Strony\">\r\n        {!data ? <Loading /> : data.map((site,i)=>{\r\n          const {frontmatter} = site.node\r\n          const {title, meta, github, demo} = frontmatter.sites\r\n                return <ContentSection key={i} \r\n                title={title} \r\n                meta={meta} \r\n                description={\r\n                  <>\r\n                <div dangerouslySetInnerHTML={{ __html: site.node.html }} className=\"description-content\"></div>\r\n                <ButtonLink href={github}>kod na githubie</ButtonLink> \r\n                {demo ? <ButtonLink href={demo}>działające demo</ButtonLink> : ''} \r\n                  </>\r\n                }\r\n                >\r\n                  <div className=\"all-photos-container\">\r\n                {!frontmatter.photos ? <Loading /> : frontmatter.photos.map((el,i)=>\r\n            <Image key={i} fluid={el.childImageSharp.fluid} style={{\r\n              maxWidth: el.childImageSharp.fluid.aspectRatio * 85 +'vh'\r\n            }} alt={frontmatter.alt ? frontmatter.alt : frontmatter.title} className=\"album-picture site-picture\"/>\r\n    )}</div>\r\n                </ContentSection>\r\n        })}\r\n    </Layout>\r\n    );\r\n}","import React from 'react';\r\nimport Icon from './Icon';\r\n\r\nexport default function InfoIcon(props){\r\n    return(\r\n        <div className={props.divClassName}>\r\n        <Icon name={props.name} alt={props.name} type=\"icon-sm\"/>\r\n        <span className=\"thin alt\">{props.children}</span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport InfoIcon from './InfoIcon';\r\n\r\n\r\nexport default function Meta(props){\r\n    \r\n    const meta = props.meta;\r\n    return(\r\n    <>\r\n    {!meta ? \"\" : Object.keys(meta).map((el, i)=>(meta[el] ? <InfoIcon name={el} key={i} divClassName=\"info-icon\">{meta[el]}</InfoIcon> : \"\"))}\r\n    </>\r\n    );\r\n}"],"sourceRoot":""}