{"version":3,"sources":["webpack:///./src/components/ButtonLink.js","webpack:///./src/pages/sites.js","webpack:///./src/components/ContentSection.js","webpack:///./src/components/DescriptionBlock.js","webpack:///./src/components/InfoIcon.js","webpack:///./src/components/Meta.js"],"names":["ButtonLink","props","href","className","children","SitesPage","data","allMarkdownRemark","edges","Layout","title","map","site","i","frontmatter","node","sites","meta","github","demo","ContentSection","key","description","dangerouslySetInnerHTML","__html","html","photos","el","fluid","childImageSharp","style","maxWidth","aspectRatio","alt","Loading","DescriptionBlock","InfoIcon","divClassName","Icon","name","type","Meta","Object","keys"],"mappings":"0kSAEe,SAASA,EAAWC,GAC/B,OACA,uBAAGC,KAAMD,EAAMC,KAAMC,UAAU,YAAYF,EAAMG,U,yBCItC,SAASC,IAEpB,IAAIC,EAAI,OAgCR,OADAA,EAAOA,EAAKC,kBAAkBC,MAG9B,kBAACC,EAAA,EAAD,CAAQC,MAAM,UACRJ,EAAqBA,EAAKK,KAAI,SAACC,EAAKC,GAAK,IAClCC,EAAeF,EAAKG,KAApBD,YADiC,EAEJA,EAAYE,MAAzCN,EAFiC,EAEjCA,MAAOO,EAF0B,EAE1BA,KAAMC,EAFoB,EAEpBA,OAAQC,EAFY,EAEZA,KACtB,OAAO,kBAACC,EAAA,EAAD,CAAgBC,IAAKR,EAC5BH,MAAOA,EACPO,KAAMA,EACNK,YACE,oCACF,yBAAKC,wBAAyB,CAAEC,OAAQZ,EAAKG,KAAKU,MAAQtB,UAAU,wBACpE,kBAACH,EAAD,CAAYE,KAAMgB,GAAlB,mBACCC,EAAO,kBAACnB,EAAD,CAAYE,KAAMiB,GAAlB,mBAAuD,KAI7D,yBAAKhB,UAAU,wBACfW,EAAYY,OAAuBZ,EAAYY,OAAOf,KAAI,SAACgB,EAAGd,GAAJ,OAChE,kBAAC,IAAD,CAAOQ,IAAKR,EAAGe,MAAOD,EAAGE,gBAAgBD,MAAOE,MAAO,CACrDC,SAAiD,GAAvCJ,EAAGE,gBAAgBD,MAAMI,YAAkB,MACpDC,IAAKnB,EAAYmB,IAAMnB,EAAYmB,IAAMnB,EAAYJ,MAAOP,UAAU,kCAH9C,kBAAC+B,EAAA,EAAD,WAftB,kBAACA,EAAA,EAAD,S,kCC7CjB,uEAGe,SAASd,EAAenB,GACnC,OACA,6BAASE,UAAU,mBACf,kBAAC,IAAD,CAAkBO,MAAOT,EAAMS,MAAOO,KAAMhB,EAAMgB,MAC7ChB,EAAMqB,aAEVrB,EAAMG,Y,kCCTf,mFAIe,SAAS+B,EAAiBlC,GAErC,IAAMgB,EAAOhB,EAAMgB,KACnB,OACA,6BAASd,UAAU,qCACf,4BAAKF,EAAMS,MAAQT,EAAMS,MAAQ,kBAAC,IAAD,OACjC,kBAAC,IAAD,CAAMO,KAAMA,IACXhB,EAAMG,Y,6JCRA,SAASgC,EAASnC,GAC7B,OACI,yBAAKE,UAAWF,EAAMoC,cACtB,kBAACC,EAAA,EAAD,CAAMC,KAAMtC,EAAMsC,KAAMN,IAAKhC,EAAMsC,KAAMC,KAAK,YAC9C,0BAAMrC,UAAU,YAAYF,EAAMG,WCH3B,SAASqC,EAAKxC,GAEzB,IAAMgB,EAAOhB,EAAMgB,KACnB,OACA,oCACEA,EAAYyB,OAAOC,KAAK1B,GAAMN,KAAI,SAACgB,EAAId,GAAL,OAAUI,EAAKU,GAAM,kBAACS,EAAD,CAAUG,KAAMZ,EAAIN,IAAKR,EAAGwB,aAAa,aAAapB,EAAKU,IAAkB,MAA7H","file":"component---src-pages-sites-js-be48329567a8cbaaf3b4.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ButtonLink(props){\r\n    return(\r\n    <a href={props.href} className=\"btn-link\">{props.children}</a>\r\n    );\r\n}","import React from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Loading from '../components/Loading';\r\nimport ContentSection from '../components/ContentSection';\r\nimport Layout from '../components/Layout';\r\nimport ButtonLink from '../components/ButtonLink';\r\nimport Image from \"gatsby-image\";\r\n\r\nexport default function SitesPage(){\r\n  \r\n    let data = useStaticQuery(graphql`\r\n    query AllSitesQuery {\r\n      allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/sites/\"}}) {\r\n        edges {\r\n          node {\r\n            html\r\n            frontmatter {\r\n              sites {\r\n                title\r\n                github\r\n                demo\r\n                meta {\r\n                  langs\r\n                }\r\n              }\r\n              photos {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 2000) {\r\n                    ...GatsbyImageSharpFluid\r\n                    aspectRatio\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    `);\r\n    data = data.allMarkdownRemark.edges\r\n    return(\r\n        \r\n    <Layout title=\"Strony\">\r\n        {!data ? <Loading /> : data.map((site,i)=>{\r\n          const {frontmatter} = site.node\r\n          const {title, meta, github, demo} = frontmatter.sites\r\n                return <ContentSection key={i} \r\n                title={title} \r\n                meta={meta} \r\n                description={\r\n                  <>\r\n                <div dangerouslySetInnerHTML={{ __html: site.node.html }} className=\"description-content\"></div>\r\n                <ButtonLink href={github}>kod na githubie</ButtonLink> \r\n                {demo ? <ButtonLink href={demo}>działające demo</ButtonLink> : ''} \r\n                  </>\r\n                }\r\n                >\r\n                  <div className=\"all-photos-container\">\r\n                {!frontmatter.photos ? <Loading /> : frontmatter.photos.map((el,i)=>\r\n            <Image key={i} fluid={el.childImageSharp.fluid} style={{\r\n              maxWidth: el.childImageSharp.fluid.aspectRatio * 85 +'vh'\r\n            }} alt={frontmatter.alt ? frontmatter.alt : frontmatter.title} className=\"album-picture site-picture\"/>\r\n    )}</div>\r\n                </ContentSection>\r\n        })}\r\n    </Layout>\r\n    );\r\n}","import React from 'react';\r\nimport DescriptionBlock from './DescriptionBlock';\r\n\r\nexport default function ContentSection(props){\r\n    return(\r\n    <section className=\"content-section\">\r\n        <DescriptionBlock title={props.title} meta={props.meta}>\r\n            {props.description}\r\n        </DescriptionBlock>\r\n        {props.children}\r\n    </section>\r\n    );\r\n}","import React from 'react';\r\nimport Loading from './Loading';\r\nimport Meta from './Meta';\r\n\r\nexport default function DescriptionBlock(props){\r\n    \r\n    const meta = props.meta;\r\n    return(\r\n    <article className=\"content-element description-block\">\r\n        <h3>{props.title ? props.title : <Loading />}</h3>\r\n        <Meta meta={meta} />\r\n        {props.children}\r\n    </article>\r\n    );\r\n}","import React from 'react';\r\nimport Icon from './Icon';\r\n\r\nexport default function InfoIcon(props){\r\n    return(\r\n        <div className={props.divClassName}>\r\n        <Icon name={props.name} alt={props.name} type=\"icon-sm\"/>\r\n        <span className=\"thin alt\">{props.children}</span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport InfoIcon from './InfoIcon';\r\n\r\n\r\nexport default function Meta(props){\r\n    \r\n    const meta = props.meta;\r\n    return(\r\n    <>\r\n    {!meta ? \"\" : Object.keys(meta).map((el, i)=>(meta[el] ? <InfoIcon name={el} key={i} divClassName=\"info-icon\">{meta[el]}</InfoIcon> : \"\"))}\r\n    </>\r\n    );\r\n}"],"sourceRoot":""}