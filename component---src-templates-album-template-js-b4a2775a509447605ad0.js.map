{"version":3,"sources":["webpack:///./src/components/DescriptionBlock.js","webpack:///./src/templates/AlbumTemplate.js","webpack:///./src/components/InfoIcon.js","webpack:///./src/components/Meta.js"],"names":["DescriptionBlock","props","meta","className","title","children","Album","markdownRemark","data","frontmatter","html","dangerouslySetInnerHTML","__html","photos","map","el","i","key","fluid","childImageSharp","style","maxWidth","aspectRatio","alt","pageQuery","InfoIcon","divClassName","Icon","name","type","Meta","Object","keys"],"mappings":"4FAAA,mFAIe,SAASA,EAAiBC,GAErC,IAAMC,EAAOD,EAAMC,KACnB,OACA,6BAASC,UAAU,qCACf,4BAAKF,EAAMG,MAAQH,EAAMG,MAAQ,kBAAC,IAAD,OACjC,kBAAC,IAAD,CAAMF,KAAMA,IACXD,EAAMI,Y,oCCXf,2KAOe,SAASC,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,CAAQN,MAAOK,EAAYL,OAC3B,kBAAC,IAAD,CAAkBA,MAAOK,EAAYL,MAAOF,KAAMO,EAAYP,MAC5D,yBAAKS,wBAAyB,CAAEC,OAAQF,GAAQP,UAAU,yBAG5D,yBAAKA,UAAU,wBACbM,EAAYI,OAAuBJ,EAAYI,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OACpD,kBAAC,IAAD,CAAOC,IAAKD,EAAGE,MAAOH,EAAGI,gBAAgBD,MAAOE,MAAO,CACrDC,SAAiD,GAAvCN,EAAGI,gBAAgBD,MAAMI,YAAkB,MACpDC,IAAKd,EAAYc,IAAMd,EAAYc,IAAMd,EAAYL,MAAOD,UAAU,qBAH1D,kBAAC,IAAD,QASpB,IAAMqB,EAAS,a,6JCzBP,SAASC,EAASxB,GAC7B,OACI,yBAAKE,UAAWF,EAAMyB,cACtB,kBAACC,EAAA,EAAD,CAAMC,KAAM3B,EAAM2B,KAAML,IAAKtB,EAAM2B,KAAMC,KAAK,YAC9C,0BAAM1B,UAAU,YAAYF,EAAMI,WCH3B,SAASyB,EAAK7B,GAEzB,IAAMC,EAAOD,EAAMC,KACnB,OACA,oCACEA,EAAY6B,OAAOC,KAAK9B,GAAMY,KAAI,SAACC,EAAIC,GAAL,OAAUd,EAAKa,GAAM,kBAACU,EAAD,CAAUG,KAAMb,EAAIE,IAAKD,EAAGU,aAAa,aAAaxB,EAAKa,IAAkB,MAA7H","file":"component---src-templates-album-template-js-b4a2775a509447605ad0.js","sourcesContent":["import React from 'react';\r\nimport Loading from './Loading';\r\nimport Meta from './Meta';\r\n\r\nexport default function DescriptionBlock(props){\r\n    \r\n    const meta = props.meta;\r\n    return(\r\n    <article className=\"content-element description-block\">\r\n        <h3>{props.title ? props.title : <Loading />}</h3>\r\n        <Meta meta={meta} />\r\n        {props.children}\r\n    </article>\r\n    );\r\n}","import React from 'react';\r\nimport DescriptionBlock from '../components/DescriptionBlock';\r\nimport Layout from '../components/Layout';\r\nimport Loading from '../components/Loading';\r\nimport Image from \"gatsby-image\";\r\n\r\nimport { graphql } from \"gatsby\"\r\nexport default function Album({\r\n  data, \r\n}) {\r\n  const { markdownRemark } = data \r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <Layout title={frontmatter.title}>\r\n    <DescriptionBlock title={frontmatter.title} meta={frontmatter.meta}>\r\n      <div dangerouslySetInnerHTML={{ __html: html }} className=\"description-content\"></div>\r\n    </DescriptionBlock>\r\n\r\n    <div className=\"all-photos-container\">\r\n    {!frontmatter.photos ? <Loading /> : frontmatter.photos.map((el,i)=>\r\n            <Image key={i} fluid={el.childImageSharp.fluid} style={{\r\n              maxWidth: el.childImageSharp.fluid.aspectRatio * 85 +'vh'\r\n            }} alt={frontmatter.alt ? frontmatter.alt : frontmatter.title} className=\"album-picture\"/>\r\n    )}\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\nexport const pageQuery = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        alt\r\n        title\r\n        photos {\r\n          childImageSharp {\r\n            fluid(maxWidth: 2000) {\r\n              ...GatsbyImageSharpFluid\r\n              aspectRatio\r\n            }\r\n          }\r\n        }\r\n        meta {\r\n          person\r\n          time\r\n          location\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport Icon from './Icon';\r\n\r\nexport default function InfoIcon(props){\r\n    return(\r\n        <div className={props.divClassName}>\r\n        <Icon name={props.name} alt={props.name} type=\"icon-sm\"/>\r\n        <span className=\"thin alt\">{props.children}</span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport InfoIcon from './InfoIcon';\r\n\r\n\r\nexport default function Meta(props){\r\n    \r\n    const meta = props.meta;\r\n    return(\r\n    <>\r\n    {!meta ? \"\" : Object.keys(meta).map((el, i)=>(meta[el] ? <InfoIcon name={el} key={i} divClassName=\"info-icon\">{meta[el]}</InfoIcon> : \"\"))}\r\n    </>\r\n    );\r\n}"],"sourceRoot":""}